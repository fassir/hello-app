name: CI/CD Pipeline - Build, Push & Update ArgoCD Manifests (Two Repositories)

on:
  push:
    branches:
      - main

env:
  DOCKER_USERNAME_SECRET: ${{ secrets.DOCKER_USERNAME_VALUE }}
  DOCKER_IMAGE_REPO_SECRET: ${{ secrets.DOCKER_IMAGE_REPO_NAME }}

  GITHUB_OWNER_SECRET: ${{ secrets.GITHUB_OWNER_USERNAME }}
  MANIFESTS_REPO_NAME_SECRET: ${{ secrets.GITHUB_MANIFESTS_REPO_NAME }}

  IMAGE_TAG: ${{ github.sha }}
  
  MANIFESTS_PATH_IN_REPO: hello-app
  LOCAL_MANIFESTS_CLONE_PATH: manifests-repo-clone 

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write      
      pull-requests: write 

    steps:
    - name: Checkout application code (hello-app)
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      id: docker_build
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.DOCKER_USERNAME_SECRET }}/${{ env.DOCKER_IMAGE_REPO_SECRET }}:${{ env.IMAGE_TAG }}
          ${{ env.DOCKER_USERNAME_SECRET }}/${{ env.DOCKER_IMAGE_REPO_SECRET }}:latest
        outputs: |
          type=image,value=${{ env.DOCKER_USERNAME_SECRET }}/${{ env.DOCKER_IMAGE_REPO_SECRET }}:${{ env.IMAGE_TAG }}
          type=image,value=${{ env.DOCKER_USERNAME_SECRET }}/${{ env.DOCKER_IMAGE_REPO_SECRET }}:latest
          type=image,value=${{ steps.docker_build.outputs.digest }}

    - name: Checkout manifests repository (hello-manifests)
      uses: actions/checkout@v4
      with:
        repository: ${{ env.GITHUB_OWNER_SECRET }}/${{ env.MANIFESTS_REPO_NAME_SECRET }}
        path: ${{ env.LOCAL_MANIFESTS_CLONE_PATH }} 
        ssh-key: ${{ secrets.SSH_PRIVATE_KEY }} 

    - name: Update image tag in deployment.yaml
      id: update_manifest
      run: |
        cd ${{ env.LOCAL_MANIFESTS_CLONE_PATH }}/${{ env.MANIFESTS_PATH_IN_REPO }}
        
        sed -i "s|image: ${{ env.DOCKER_USERNAME_SECRET }}/${{ env.DOCKER_IMAGE_REPO_SECRET }}:.*|image: ${{ env.DOCKER_USERNAME_SECRET }}/${{ env.DOCKER_IMAGE_REPO_SECRET }}:${{ env.IMAGE_TAG }}|g" deployment.yaml
        
        echo "Conteúdo de deployment.yaml atualizado:"
        cat deployment.yaml 
        
        if ! git diff --quiet --exit-code deployment.yaml; then
          echo "changes_detected=true" >> $GITHUB_OUTPUT
          echo "Changes detected in deployment.yaml. Ready to create Pull Request."
        else
          echo "changes_detected=false" >> $GITHUB_OUTPUT
          echo "No changes detected in deployment.yaml. Skipping Pull Request."
        fi
      working-directory: ${{ github.workspace }} 

    - name: Create Pull Request
      if: steps.update_manifest.outputs.changes_detected == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GH_PAT_FOR_MANIFESTS }} 
        
        commit-message: "feat(app): Update hello-app image to ${{ env.IMAGE_TAG }}"
        title: "Atualização da Imagem hello-app para novo SHA"
        body: |
          Este Pull Request atualiza a tag da imagem `hello-app` para o novo SHA: `${{ env.IMAGE_TAG }}` no `deployment.yaml`.
          Disparado por push no repositório da aplicação.
        branch: "update-image-tag-${{ github.sha }}"
        base: "main"
        delete-branch: true
        repository: ${{ env.GITHUB_OWNER_SECRET }}/${{ env.MANIFESTS_REPO_NAME_SECRET }} 
        path: ${{ env.LOCAL_MANIFESTS_CLONE_PATH }}
